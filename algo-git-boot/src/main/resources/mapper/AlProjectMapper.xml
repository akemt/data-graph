<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.beyond.algo.mapper.AlProjectMapper" >
  <resultMap id="BaseResultMap" type="com.beyond.algo.model.AlProject" >
    <id column="project_id" property="projectId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="language_code" property="languageCode" jdbcType="VARCHAR" />
    <result column="algo_id" property="algoId" jdbcType="VARCHAR" />
    <result column="project_name" property="projectName" jdbcType="VARCHAR" />
    <result column="source_code" property="sourceCode" jdbcType="CHAR" />
    <result column="http_url" property="httpUrl" jdbcType="VARCHAR" />
    <result column="ssh_url" property="sshUrl" jdbcType="VARCHAR" />
    <result column="call_other" property="callOther" jdbcType="CHAR" />
    <result column="gpu_standard" property="gpuStandard" jdbcType="CHAR" />
    <result column="create_date" property="createDate" jdbcType="BIGINT" />
    <result column="update_date" property="updateDate" jdbcType="BIGINT" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from al_project
    where project_id = #{projectId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.beyond.algo.model.AlProject" >
    insert into al_project (project_id, user_id, language_code, 
      algo_id, project_name, source_code, 
      http_url, ssh_url, call_other, 
      gpu_standard, create_date, update_date
      )
    values (#{projectId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{languageCode,jdbcType=VARCHAR}, 
      #{algoId,jdbcType=VARCHAR}, #{projectName,jdbcType=VARCHAR}, #{sourceCode,jdbcType=CHAR}, 
      #{httpUrl,jdbcType=VARCHAR}, #{sshUrl,jdbcType=VARCHAR}, #{callOther,jdbcType=CHAR}, 
      #{gpuStandard,jdbcType=CHAR}, #{createDate,jdbcType=BIGINT}, #{updateDate,jdbcType=BIGINT}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.beyond.algo.model.AlProject" >
    update al_project
    set user_id = #{userId,jdbcType=INTEGER},
      language_code = #{languageCode,jdbcType=VARCHAR},
      algo_id = #{algoId,jdbcType=VARCHAR},
      project_name = #{projectName,jdbcType=VARCHAR},
      source_code = #{sourceCode,jdbcType=CHAR},
      http_url = #{httpUrl,jdbcType=VARCHAR},
      ssh_url = #{sshUrl,jdbcType=VARCHAR},
      call_other = #{callOther,jdbcType=CHAR},
      gpu_standard = #{gpuStandard,jdbcType=CHAR},
      create_date = #{createDate,jdbcType=BIGINT},
      update_date = #{updateDate,jdbcType=BIGINT}
    where project_id = #{projectId,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select project_id, user_id, language_code, algo_id, project_name, source_code, http_url, 
    ssh_url, call_other, gpu_standard, create_date, update_date
    from al_project
    where project_id = #{projectId,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select project_id, user_id, language_code, algo_id, project_name, source_code, http_url, 
    ssh_url, call_other, gpu_standard, create_date, update_date
    from al_project
  </select>
</mapper>