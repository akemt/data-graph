<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.beyond.algo.mapper.AlgDataMapper" >
  <resultMap id="BaseResultMap" type="com.beyond.algo.model.AlgData" >
    <id column="data_sn" property="dataSn" jdbcType="VARCHAR" />
    <result column="data_set_sn" property="dataSetSn" jdbcType="VARCHAR" />
    <result column="usr_sn" property="usrSn" jdbcType="VARCHAR" />
    <result column="data_name" property="dataName" jdbcType="VARCHAR" />
    <result column="data_en_name" property="dataEnName" jdbcType="VARCHAR" />
    <result column="creat_time" property="creatTime" jdbcType="TIMESTAMP" />
    <result column="data_size" property="dataSize" jdbcType="VARCHAR" />
    <result column="data_addr" property="dataAddr" jdbcType="VARCHAR" />
    <result column="data_loc" property="dataLoc" jdbcType="VARCHAR" />
    <result column="is_open_src" property="isOpenSrc" jdbcType="VARCHAR" />
    <result column="data_abs" property="dataAbs" jdbcType="VARCHAR" />
    <result column="data_content" property="dataContent" jdbcType="VARCHAR" />
    <result column="data_credit" property="dataCredit" jdbcType="INTEGER" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from alg_data
    where data_sn = #{dataSn,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.beyond.algo.model.AlgData" >
    insert into alg_data (data_sn, data_set_sn, usr_sn, 
      data_name, data_en_name, creat_time, 
      data_size, data_addr, data_loc, 
      is_open_src, data_abs, data_content, 
      data_credit)
    values (#{dataSn,jdbcType=VARCHAR}, #{dataSetSn,jdbcType=VARCHAR}, #{usrSn,jdbcType=VARCHAR}, 
      #{dataName,jdbcType=VARCHAR}, #{dataEnName,jdbcType=VARCHAR}, #{creatTime,jdbcType=TIMESTAMP}, 
      #{dataSize,jdbcType=VARCHAR}, #{dataAddr,jdbcType=VARCHAR}, #{dataLoc,jdbcType=VARCHAR}, 
      #{isOpenSrc,jdbcType=VARCHAR}, #{dataAbs,jdbcType=VARCHAR}, #{dataContent,jdbcType=VARCHAR}, 
      #{dataCredit,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.beyond.algo.model.AlgData" >
    update alg_data
    set data_set_sn = #{dataSetSn,jdbcType=VARCHAR},
      usr_sn = #{usrSn,jdbcType=VARCHAR},
      data_name = #{dataName,jdbcType=VARCHAR},
      data_en_name = #{dataEnName,jdbcType=VARCHAR},
      creat_time = #{creatTime,jdbcType=TIMESTAMP},
      data_size = #{dataSize,jdbcType=VARCHAR},
      data_addr = #{dataAddr,jdbcType=VARCHAR},
      data_loc = #{dataLoc,jdbcType=VARCHAR},
      is_open_src = #{isOpenSrc,jdbcType=VARCHAR},
      data_abs = #{dataAbs,jdbcType=VARCHAR},
      data_content = #{dataContent,jdbcType=VARCHAR},
      data_credit = #{dataCredit,jdbcType=INTEGER}
    where data_sn = #{dataSn,jdbcType=VARCHAR}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select data_sn, data_set_sn, usr_sn, data_name, data_en_name, creat_time, data_size, 
    data_addr, data_loc, is_open_src, data_abs, data_content, data_credit
    from alg_data
    where data_sn = #{dataSn,jdbcType=VARCHAR}
  </select>
  <select id="queryAlgDatabySet" resultMap="BaseResultMap" parameterType="java.lang.String"  >
    select data_sn, data_set_sn, usr_sn, data_name, data_en_name, creat_time, data_size, 
    data_addr, data_loc, is_open_src, data_abs, data_content, data_credit
    from alg_data
    WHERE data_set_sn = #{dataSetSn,jdbcType=VARCHAR}
  </select>
  <select id="checkDataEnName" resultType="java.lang.Integer"  parameterType="com.beyond.algo.model.AlgData"  >
    select COUNT(*)
    from alg_data
    WHERE
    <if test="dataSn == null" >
      usr_sn = #{usrSn,jdbcType=VARCHAR} AND data_en_name = #{dataEnName,jdbcType=VARCHAR}
    </if>
    <if test="dataSn != null" >
      usr_sn = #{usrSn,jdbcType=VARCHAR} AND data_en_name = #{dataEnName,jdbcType=VARCHAR} AND data_sn != #{dataSn,jdbcType=VARCHAR}
    </if>
  </select>
  <select id="dataCount" resultType="java.lang.Integer"  parameterType="java.lang.String">
    select COUNT(*)
    from alg_data
    where data_set_sn = #{dataSetSn,jdbcType=VARCHAR}
  </select>
</mapper>