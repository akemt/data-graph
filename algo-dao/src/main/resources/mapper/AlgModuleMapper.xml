<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.beyond.algo.mapper.AlgModuleMapper">
    <resultMap id="BaseResultMap" type="com.beyond.algo.model.AlgModule">
        <id column="mod_sn" property="modSn" jdbcType="VARCHAR"/>
        <result column="usr_sn" property="usrSn" jdbcType="VARCHAR"/>
        <result column="lan_sn" property="lanSn" jdbcType="VARCHAR"/>
        <result column="cat_sn" property="catSn" jdbcType="VARCHAR"/>
        <result column="lic_sn" property="licSn" jdbcType="VARCHAR"/>
        <result column="atl_sn" property="atlSn" jdbcType="VARCHAR"/>
        <result column="mod_name" property="modName" jdbcType="VARCHAR"/>
        <result column="mod_id" property="modId" jdbcType="VARCHAR"/>
        <result column="is_open_src" property="isOpenSrc" jdbcType="VARCHAR"/>
        <result column="need_web" property="needWeb" jdbcType="VARCHAR"/>
        <result column="need_call_other" property="needCallOther" jdbcType="VARCHAR"/>
        <result column="env_type" property="envType" jdbcType="VARCHAR"/>
        <result column="is_train" property="isTrain" jdbcType="VARCHAR"/>
        <result column="is_colony" property="isColony" jdbcType="VARCHAR"/>
        <result column="colony_plan_id" property="colonyPlanId" jdbcType="VARCHAR"/>
        <result column="mod_desc" property="modDesc" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="ModuleListMap" type="com.beyond.algo.vo.AlgModuleListVo">
        <result column="mod_name" property="modName" jdbcType="VARCHAR"/>
        <result column="mod_id" property="modId" jdbcType="VARCHAR"/>
        <result column="create_date" property="createDate" jdbcType="VARCHAR"/>
        <result column="star_cnt" property="starCnt" jdbcType="VARCHAR"/>
        <result column="follow_cnt" property="followCnt" jdbcType="VARCHAR"/>
        <result column="call_cnt" property="callCnt" jdbcType="VARCHAR"/>
        <result column="lan_name" property="lanName" jdbcType="VARCHAR"/>
        <result column="usr_name" property="usrName" jdbcType="VARCHAR"/>
        <result column="url" property="url" jdbcType="VARCHAR"/>
        <result column="papertext" property="papertext" jdbcType="VARCHAR"/>
        <result column="id" property="id" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap id="queryForListMap" type="com.beyond.algo.vo.AlgModuleVo"  extends="BaseResultMap">
        <result column="lic_name" jdbcType="VARCHAR" property="licName" />
        <result column="lan_name" jdbcType="VARCHAR" property="lanName" />
        <result column="ver_code" jdbcType="VARCHAR" property="verCode" />
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from alg_module
    where mod_sn = #{modSn,jdbcType=VARCHAR}
  </delete>
    <insert id="insert" parameterType="com.beyond.algo.model.AlgModule">
    insert into alg_module (mod_sn, usr_sn, lan_sn, 
      cat_sn, lic_sn, atl_sn, 
      mod_name, mod_id, is_open_src, 
      need_web, need_call_other, env_type, is_train, is_colony, colony_plan_id,mod_desc
      )
    values (#{modSn,jdbcType=VARCHAR}, #{usrSn,jdbcType=VARCHAR}, #{lanSn,jdbcType=VARCHAR}, 
      #{catSn,jdbcType=VARCHAR}, #{licSn,jdbcType=VARCHAR}, #{atlSn,jdbcType=VARCHAR}, 
      #{modName,jdbcType=VARCHAR}, #{modId,jdbcType=VARCHAR}, #{isOpenSrc,jdbcType=VARCHAR}, 
      #{needWeb,jdbcType=VARCHAR}, #{needCallOther,jdbcType=VARCHAR}, #{envType,jdbcType=VARCHAR},
      #{isTrain,jdbcType=VARCHAR}, #{isColony,jdbcType=VARCHAR}, #{colonyPlanId,jdbcType=VARCHAR},
      #{modDesc,jdbcType=VARCHAR}
      )
  </insert>
    <update id="updateByPrimaryKey" parameterType="com.beyond.algo.model.AlgModule">
    update alg_module
    set usr_sn = #{usrSn,jdbcType=VARCHAR},
      lan_sn = #{lanSn,jdbcType=VARCHAR},
      cat_sn = #{catSn,jdbcType=VARCHAR},
      lic_sn = #{licSn,jdbcType=VARCHAR},
      atl_sn = #{atlSn,jdbcType=VARCHAR},
      mod_name = #{modName,jdbcType=VARCHAR},
      mod_id = #{modId,jdbcType=VARCHAR},
      is_open_src = #{isOpenSrc,jdbcType=VARCHAR},
      need_web = #{needWeb,jdbcType=VARCHAR},
      need_call_other = #{needCallOther,jdbcType=VARCHAR},
      env_type = #{envType,jdbcType=VARCHAR},
      is_train = #{isTrain,jdbcType=VARCHAR},
      is_colony = #{isColony,jdbcType=VARCHAR},
      colony_plan_id = #{colonyPlanId,jdbcType=VARCHAR},
      mod_desc = #{modDesc,jdbcType=VARCHAR}
    where mod_sn = #{modSn,jdbcType=VARCHAR}
  </update>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
    select mod_sn, usr_sn, lan_sn, cat_sn, lic_sn, atl_sn, mod_name, mod_id, is_open_src, 
    need_web, need_call_other, env_type, is_train, is_colony, colony_plan_id,mod_desc
    from alg_module
    where mod_sn = #{modSn,jdbcType=VARCHAR}
  </select>
    <select id="selectAll" resultMap="BaseResultMap">
    select mod_sn, usr_sn, lan_sn, cat_sn, lic_sn, atl_sn, mod_name, mod_id, is_open_src, 
    need_web, need_call_other, env_type, is_train, is_colony, colony_plan_id,mod_desc
    from alg_module
  </select>
    <sql id="alg_module_tbl">
    select mod_sn, usr_sn, lan_sn, cat_sn, lic_sn, atl_sn, mod_name, mod_id, is_open_src,
    need_web, need_call_other, env_type, is_train, is_colony, colony_plan_id,mod_desc
    from alg_module
  </sql>
    <select id="getRankList" resultMap="BaseResultMap">
        <include refid="alg_module_tbl"/>
        where mod_id in
        <foreach collection="list" item="item" index="index"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
    <sql id="findModuleListColumn">
        mo.mod_id as mod_id,
        mo.mod_name as mod_name,
        amv.createDate as create_date,
        usa.star_cnt as star_cnt,
        usa.follow_cnt as follow_cnt,
        usa.call_cnt as call_cnt,
        lan.lan_name as lan_name,
        us.usr_name as usr_name,
        concat('/algo','/',us.usr_code,'/',mo.mod_id) as url,
	    art.papertext as papertext,
	    art.id as id
    </sql>
    <select id="findModuleList" resultMap="ModuleListMap">
        select
        <include refid="findModuleListColumn"/>
        from alg_module mo
        left join alg_algo_category ac on mo.cat_sn = ac.cat_sn
        left join alg_module_usage usa on usa.mod_sn = mo.mod_sn
        left join (select max(create_date) as createDate ,mod_sn from alg_module_version group by mod_sn) amv on amv.mod_sn = mo.mod_sn
        left join alg_program_lang lan on lan.lan_sn = mo.lan_sn
        left join alg_user us on us.usr_sn = mo.usr_sn
        left join alg_article_list art on art.id = mo.atl_sn
        <where>
            <trim prefixOverrides="and">
                <if test="arg0 != null and arg0 !=''">and ac.cat_sn = #{arg0,jdbcType=VARCHAR}</if>
                <if test="arg2 != null and arg2 !=''">and (mo.mod_name like concat(#{arg2,jdbcType=VARCHAR},'%') or mo.mod_desc like concat(#{arg2,jdbcType=VARCHAR},'%') )</if>
                <if test="arg3 != null and arg3 !=''">and mo.atl_sn = #{arg3,jdbcType=VARCHAR}</if>
                <if test="arg4 != null and arg4 !=''">and us.usr_code = #{arg4,jdbcType=VARCHAR}</if>
            </trim>
        </where>
        <if test="arg1 == ''"> order by usa.star_cnt DESC </if>
        <if test="arg1 == 'starCnt'"> order by usa.star_cnt DESC </if>
        <if test="arg1 == 'followCnt'"> order by usa.follow_cnt DESC </if>
        <if test="arg1 == 'callCnt'"> order by usa.call_cnt DESC </if>
        <if test="arg1 == 'creditCnt'"> order by usa.credit_cnt DESC </if>
    </select>

    <select id="selectByUsrSnAndModId" resultMap="BaseResultMap">
        select * from alg_module
        <include refid="Base_Where_Clause"/>
    </select>
    <sql id="Base_Where_Clause">
        <where>
            <trim prefixOverrides="and">
                <if test="usrSn != null and usrSn !=''">and usr_sn = #{usrSn,jdbcType=VARCHAR}</if>
                <if test="modId != null and modId !=''">and mod_id = #{modId,jdbcType=VARCHAR}</if>
            </trim>
        </where>
    </sql>

    <select id="getAlgorithmDetail" resultMap="queryForListMap"  parameterType="com.beyond.algo.vo.AlgorithmDetailVo" >
        select algModule.mod_sn,algModule.mod_id,algModule.need_web
        ,algModule.env_type,algModule.need_call_other,algLicense.lic_name,lan.lan_name
        ,algModuleVersion.ver_code,algStar.count
        from alg_module algModule
        left join alg_license algLicense on algModule.lic_sn=algLicense.lic_sn
        left join  alg_program_lang lan on algModule.lan_sn =lan.lan_sn
        left join (select mod_sn,max(CONCAT(ver_code_l1,ver_code_l2,ver_code_l3)) as ver_code from alg_module_version GROUP BY mod_sn) algModuleVersion on algModule.mod_sn =algModuleVersion.mod_sn
        left join(select count(mod_sn) count,mod_sn from alg_star GROUP BY mod_sn) algStar ON algStar.mod_sn=algModule.mod_sn
        where algModule.mod_id=#{modId,jdbcType=VARCHAR}
        and algModule.usr_sn=#{usrSn,jdbcType=VARCHAR}
    </select>

</mapper>